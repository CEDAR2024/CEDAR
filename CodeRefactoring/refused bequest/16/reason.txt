Explanation of Changes
Extracted Handler Class (FigJunctionStateHandler):

Why: To encapsulate functionalities specific to FigJunctionState that were previously managed within the class, making the code more modular.
How: Created FigJunctionStateHandler to manage properties and methods related to the visual aspects and functionalities of FigJunctionState.
Benefit: Improves separation of concerns and removes unnecessary inheritance, simplifying the class structure.
Removed Inheritance:

Why: The original class extended FigStateVertex but did not utilize most of its methods or properties.
How: Removed inheritance from FigStateVertex and used an instance of FigJunctionStateHandler to manage the required functionalities.
Benefit: Avoids unnecessary inheritance, making the code easier to understand and maintain, while adhering to the principles of composition over inheritance.
Encapsulated Visual Properties and Methods in FigJunctionStateHandler:

Why: To keep FigJunctionState focused on its core responsibilities while delegating visual and interaction-related properties to the handler.
How: Moved methods such as setLineColor, getLineColor, setFillColor, getFillColor, setLineWidth, getLineWidth, and getClosestPoint to FigJunctionStateHandler.
Benefit: Enhances readability and maintainability by clearly separating different concerns within the code.