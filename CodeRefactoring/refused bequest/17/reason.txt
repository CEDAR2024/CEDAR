1. **Created `ClassifierRoleHandler` Class**
   - **Why**: To encapsulate functionalities specific to `SelectionClassifierRole`.
   - **How**: Moved role-specific methods and properties to `ClassifierRoleHandler`.
   - **Benefit**: Separates concerns, improves modularity, and reduces the burden on `SelectionClassifierRole`.

2. **Removed Inheritance from `SelectionNodeClarifiers`**
   - **Why**: `SelectionClassifierRole` does not fully utilize the inherited methods and properties.
   - **How**: Changed `SelectionClassifierRole` to use composition with `ClassifierRoleHandler` instead of inheritance.
   - **Benefit**: Avoids unnecessary inheritance, making the code easier to understand and maintain.

3. **Encapsulated Role-Specific Methods in `ClassifierRoleHandler`**
   - **Why**: To keep `SelectionClassifierRole` focused on its core responsibilities.
   - **How**: Moved methods like `setIncomingButtonEnabled`, `setOutgoingButtonEnabled`, and hit and drag handling to `ClassifierRoleHandler`.
   - **Benefit**: Enhances readability and maintainability by clearly separating different concerns.